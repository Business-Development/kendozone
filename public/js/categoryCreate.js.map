{"version":3,"names":[],"mappings":"","sources":["categoryCreate.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nnew Vue({\n    el: 'body',\n    data: {\n        isTeam: 0,\n        alias: '',\n        genderSelect: 'M',\n        ageCategorySelect: 0,\n        ageMin: 0,\n        ageMax: 0,\n        gradeSelect: 0,\n        gradeMin: 0,\n        gradeMax: 0,\n        error: '',\n        grades: [{ value: 0, text: no_grade }, { value: 2, text: '7 Kyu' }, { value: 3, text: '6 Kyu' }, { value: 4, text: '5 Kyu' }, { value: 5, text: '4 Kyu' }, { value: 6, text: '3 Kyu' }, { value: 7, text: '2 Kyu' }, { value: 8, text: '1 Kyu' }, { value: 9, text: '1 Dan' }, { value: 10, text: '2 Dan' }, { value: 11, text: '3 Dan' }, { value: 12, text: '4 Dan' }, { value: 13, text: '5 Dan' }, { value: 14, text: '6 Dan' }, { value: 15, text: '7 Dan' }, { value: 16, text: '8 Dan' }],\n        ageCategories: [{ value: 0, text: no_age }, { value: 1, text: childs }, { value: 2, text: students }, { value: 3, text: adults }, { value: 4, text: masters }, { value: 5, text: custom }],\n\n        genders: [{ value: 'M', text: male }, { value: 'F', text: female }, { value: 'X', text: mixt }],\n        categoryFullName: 'Individual Men',\n        url: '/api/v1/category/create'\n\n    },\n    computed: {\n        categoryFullName: function categoryFullName() {\n            var teamText = this.isTeam == 1 ? team : single;\n            var ageCategoryText = '';\n            var gradeText = '';\n\n            if (this.ageCategorySelect != 0) {\n                if (this.ageCategorySelect == 5) {\n                    ageCategoryText = ' - ' + age + ' : ';\n                    if (this.ageMin != 0 && this.ageMax != 0) {\n                        if (this.ageMin == this.ageMax) {\n                            ageCategoryText += this.ageMax + ' ' + years;\n                        } else {\n                            ageCategoryText += this.ageMin + ' - ' + this.ageMax + ' ' + years;\n                        }\n                    } else if (this.ageMin == 0 && this.ageMax != 0) {\n                        ageCategoryText += ' < ' + this.ageMax + ' ' + years;\n                    } else if (this.ageMin != 0 && this.ageMax == 0) {\n                        ageCategoryText += ' > ' + this.ageMin + ' ' + years;\n                    } else {\n                        ageCategoryText = '';\n                    }\n                } else {\n                    ageCategoryText = this.getSelectText(this.ageCategories, this.ageCategorySelect);\n                }\n            }\n\n            if (this.gradeSelect == 3) {\n                gradeText = ' - ' + grade + ' : ';\n                if (this.gradeMin != 0 && this.gradeMax != 0) {\n                    if (this.gradeMin == this.gradeMax) {\n                        gradeText += this.getSelectText(this.grades, this.gradeMin);\n                    } else {\n                        gradeText += this.getSelectText(this.grades, this.gradeMin) + ' - ' + this.getSelectText(this.grades, this.gradeMax);\n                    }\n                } else if (this.gradeMin == 0 && this.gradeMax != 0) {\n                    gradeText += ' < ' + this.getSelectText(this.grades, this.gradeMax);\n                } else if (this.gradeMin != 0 && this.gradeMax == 0) {\n                    gradeText += ' > ' + this.getSelectText(this.grades, this.gradeMin);\n                } else {\n                    gradeText = '';\n                }\n            }\n\n            return teamText + ' ' + this.getSelectText(this.genders, this.genderSelect) + ' ' + ageCategoryText + ' ' + gradeText;\n        }\n    },\n\n    methods: {\n        addCategory: function addCategory() {\n            var _this = this;\n\n            this.error = '';\n            // Get Get Category Name and Id\n            // var url = '/api/v1/category/team/' + this.isTeam + '/gender/' + this.genderSelect\n            //     + '/age/' + this.ageCategorySelect + '/' + this.ageMin + '/' + +this.ageMax\n            //     + '/grade/' + this.gradeSelect + '/' + this.gradeMin + '/' + this.gradeMax;\n\n\n            dualListIds = [];\n            $(\".listbox-filter-disabled > option\").each(function () {\n                dualListIds.push(this.value);\n            });\n\n            var categoryData = {\n                \"isTeam\": this.isTeam,\n                \"gender\": this.genderSelect,\n                \"alias\": this.alias,\n                \"ageCategory\": this.ageCategorySelect,\n                \"ageMin\": this.ageMin,\n                \"ageMax\": this.ageMax,\n                \"gradeCategory\": this.gradeSelect,\n                \"gradeMin\": this.gradeMin,\n                \"gradeMax\": this.gradeMax\n            };\n\n            this.$http.post(this.url, categoryData).then(function (response) {\n                if (dualListIds.indexOf('' + response.data.id) == -1) {\n                    var option;\n                    console.log(_this.alias);\n                    if (_this.alias != '') option = '<option value=' + response.data.id + ' selected>' + _this.alias + '</option>';else option = '<option value=' + response.data.id + ' selected>' + _this.categoryFullName + '</option>';\n                    // console.log(option);\n                    dualList.append(option);\n                    dualList.bootstrapDualListbox('refresh');\n                } else {\n                    // Print message\n                    _this.error = \" Ya existe el elemento\";\n                }\n            });\n        },\n\n        // $.getJSON(url, function (data) {\n        //     if (dualListIds.indexOf('' + data.id) == -1){\n        //         var option = '<option value=' + data.id + ' selected>' + this.categoryFullName + '</option>';\n        //         // console.log(option);\n        //         dualList.append(option);\n        //         dualList.bootstrapDualListbox('refresh');\n        //     }else{\n        //         // Print message\n        //         this.error =\" Ya existe el elemento\";\n        //     }\n        // }.bind(this));\n\n\n        decodeHtml: function decodeHtml(html) {\n            var txt = document.createElement(\"textarea\");\n            txt.innerHTML = html;\n            return txt.value;\n        },\n        getSelectText: function getSelectText(myArray, val) {\n            var newVal = '';\n            myArray.map(function (el) {\n                if (val == el.value) {\n                    newVal = el.text;\n                }\n            });\n            return newVal;\n        },\n        resetModalValues: function resetModalValues() {\n            this.isTeam = 0;\n            this.genderSelect = 'M';\n            this.ageCategorySelect = 0;\n            this.ageMin = 0;\n            this.ageMax = 0;\n            this.gradeSelect = 0;\n            this.gradeMin = 0;\n            this.gradeMax = 0;\n        }\n    },\n    filters: {\n        selectText: function selectText(val, myArray) {\n            return this.getSelectText(myArray, val);\n        },\n        html: function html(_html) {\n            return this.decodeHtml(_html);\n        }\n    }\n});\n\n},{}]},{},[1]);\n"],"file":"categoryCreate.js"}