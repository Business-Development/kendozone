{"version":3,"sources":["tournamentEditFooter.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tournamentEditFooter.js","sourcesContent":["\n$(function () {\n    let dateFin = $('#dateFin').val();\n    $.ajaxPrefilter(function (options, originalOptions, jqXHR) {\n        jqXHR.setRequestHeader('X-CSRF-Token', csrfToken);\n    });\n\n    let currentTabId= '\"#' + activeTab+'\"';\n    $('.nav-tabs a[href='+currentTabId+']').tab('show');\n\n    $('.fightDuration').timepicker(('option', {\n        'minTime': '2:00',\n        'maxTime': '10:00',\n        'timeFormat': 'H:i',\n        'step': '15'\n    }));\n\n    $('.enchoDuration').timepicker(('option', {\n        'minTime': '1:00',\n        'maxTime': '10:00',\n        'timeFormat': 'H:i',\n        'step': '15'\n    }));\n\n    $('#name').blur(function () {\n        let name = $(this).val();\n        if (!name || name < 6) {\n            $(this).closest('div').removeClass('has-success').addClass('has-error');\n        } else {\n            $(this).closest('div').removeClass('has-error').addClass('has-success');\n        }\n    });\n\n    $('#dateIni').blur(function () {\n        let dateIni = $(this).val();\n        if (!dateIni) {\n            $(this).closest('div').removeClass('has-success').addClass('has-error');\n        } else {\n            $(this).closest('div').removeClass('has-error').addClass('has-success');\n        }\n    });\n\n    $('#dateFin').blur(function () {\n        if (!dateFin) {\n            $(this).closest('div').removeClass('has-success').addClass('has-error');\n        } else {\n            $(this).closest('div').removeClass('has-error').addClass('has-success');\n        }\n    });\n\n    $('#venue').click(function () {\n        $('#locationpicker-default').locationpicker({\n            location: {latitude: latitude, longitude: longitude},\n            radius: 300,\n            inputBinding: {\n                latitudeInput: $('#latitude'),\n                longitudeInput: $('#longitude'),\n                radiusInput: $('#us2-radius'),\n                locationNameInput: $('#address')\n            },\n            enableAutocomplete: true,\n            onchanged: function (currentLocation, radius, isMarkerDropped) {\n                let addressComponents = $(this).locationpicker('map').location.addressComponents;\n                $(\"#latitude\").val(currentLocation.latitude);\n                $(\"#longitude\").val(currentLocation.longitude);\n                updateControls(addressComponents);\n\n            }, oninitialized: function (component) {\n\n                $('#venue_name').val(venue.venue_name);\n                $('#address').val(venue.address);\n                $('#details').val(venue.details);\n                $('#city').val(venue.city);\n                $('#CP').val(venue.CP);\n                $('#state').val(venue.state);\n                $('#latitude').val(venue.latitude);\n                $('#longitude').val(venue.longitude);\n            }\n\n        });\n\n\n    });\n\n\n\n\n\n    function updateControls(addressComponents) {\n        $('#city').val(addressComponents.city);\n        $('#CP').val(addressComponents.postalCode);\n        $('#state').val(addressComponents.stateOrProvince);\n\n    }\n\n    $('input[name=\"hasEncho\"]').on('switchChange.bootstrapSwitch', function (event, state) {\n        let isChecked = $(this).is(':checked');\n        $(this).closest('form').find('[name=\"enchoQty\"]').prop('disabled', !isChecked);\n        $(this).closest('form').find('[name=\"enchoDuration\"]').prop('disabled', !isChecked);\n        $(this).closest('form').find('[name=\"enchoTimeLimitless\"]').prop('disabled', !isChecked);\n    });\n    $('input[name=\"hasPreliminary\"]').on('switchChange.bootstrapSwitch', function (event, state) {\n        let isChecked = $(this).is(':checked');\n        $(this).closest('form').find('[name=\"preliminaryGroupSize\"]').prop('disabled', !isChecked);\n        $(this).closest('form').find('[name=\"preliminaryWinner\"]').prop('disabled', !isChecked);\n\n    });\n    $('input[name=\"hasHantei\"]').on('switchChange.bootstrapSwitch', function (event, state) {\n        let isChecked = $(this).is(':checked');\n        $(this).closest('form').find('[name=\"hanteiLimit\"]').prop('disabled', !isChecked);\n    });\n\n// EDIT TOURNAMENT\n    $('.btn-update-tour').on('click', function (e) {\n        e.preventDefault();\n        let inputData = $(this).parents('form:first').serialize();\n        let name = $('#name');\n\n        if (name.val() == '' || name.val().length < 6) {\n            name.closest('div').removeClass('has-success').addClass('has-error');\n        } else {\n            name.closest('div').removeClass('has-error').addClass('has-success');\n        }\n        $(this).find('i').addClass('icon-spinner spinner position-left');\n        $(this).prop(\"disabled\", true);\n        let btnUpdateTour = $('.btn-update-tour');\n\n        $.ajax(\n            {\n                type: 'PUT',\n                url: url_edit,\n                data: inputData,\n\n                success: function (data) {\n\n                    if (data != null && data.status == 'success') {\n\n                        noty({\n                            layout: 'bottomLeft',\n                            theme: 'kz',\n                            type: 'success',\n                            width: 200,\n                            dismissQueue: true,\n                            timeout: 13000,\n                            text: data.msg,\n                            template: '<div class=\"noty_message\"><div class=\"row\"><div class=\"col-xs-4 noty_icon\"><i class=\"icon-trophy2 \"></i> </div><div class=\"col-xs-8\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div></div>'\n\n                        });\n                        $('.btn-update-tour').prop(\"disabled\", false);\n                        $('.btn-update-tour').find('i').removeClass('icon-spinner spinner position-left');\n\n                        // Show / Hide Share Tournament Link\n                        let tournamentType = $('[name=\"type\"]').is(':checked');\n                        if (tournamentType) $('#share_tournament').show();\n                        else $('#share_tournament').hide();\n\n                        // Set Venue Badge\n                        let venueSize = $('[name=\"venue_name\"]').val().length;\n                        let latSize = $('[name=\"latitude\"]').val().length;\n                        let longSize = $('[name=\"longitude\"]').val().length;\n\n                        if (venueSize > 0 && latSize > 0 && longSize > 0) {\n                            $('#venue-status').show();\n                        } else {\n                            $('#venue-status').hide();\n                        }\n\n\n                    } else {\n                        btnUpdateTour.prop(\"disabled\", false);\n                        btnUpdateTour.find('i').removeClass('icon-spinner spinner position-left');\n                        noty({\n                            layout: 'bottomLeft',\n                            theme: 'kz',\n                            type: 'warning',\n                            width: 200,\n                            dismissQueue: true,\n                            timeout: 5000,\n                            text: url_edit,\n                            template: '<div class=\"noty_message\"><div class=\"row\"><div class=\"col-xs-4 noty_icon\"><i class=\"icon-warning\"></i> </div><div class=\"col-xs-8\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div></div>'\n                        });\n                    }\n\n                },\n                error: function (data) {\n                    let text = \"\";\n                    let json = data.responseText;\n                    let obj = null;\n                    try {\n                        obj = jQuery.parseJSON(json);\n                        if (obj.hasOwnProperty('venue_name')) {\n                            text += obj.venue_name[0] + \"<br/>\";\n                        }\n                        if (obj.hasOwnProperty('CP')) {\n                            text += obj.CP[0] + \"<br/>\";\n                        }\n                    } catch (err) {\n                        text = \"Server Error\";\n                    }\n\n                    btnUpdateTour.prop(\"disabled\", false);\n                    btnUpdateTour.find('i').removeClass('icon-spinner spinner position-left');\n                    noty({\n                        layout: 'bottomLeft',\n                        theme: 'kz',\n                        type: 'error',\n                        width: 200,\n                        dataType: 'json',\n                        dismissQueue: true,\n                        timeout: 5000,\n                        text: text,\n                        template: '<div class=\"noty_message\"><div class=\"row\"><div class=\"col-xs-4 noty_icon\"><i class=\"icon-warning\"></i> </div><div class=\"col-xs-8\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div></div>'\n\n                    });\n\n\n                }\n            }\n        );\n    });\n\n//EDIT CATEGORIES\n    let categoriesSize = null;\n\n    $('.save_category').on('click', function (e) {\n        e.preventDefault();\n        let inputData = $('.save_category').serialize();\n        let form = $(this).parents('form:first');\n        inputData = form.serialize();\n        // let tournamentId = form.data('tournament');\n        let championshipId = form.data('championship');\n        let settingId = form.data('setting');\n\n        $(this).find('i').removeClass();\n        $(this).find('i').addClass('icon-spinner spinner position-left');\n        $(this).prop(\"disabled\", true);\n        let panel = $(this).closest('.panel');\n\n        let method = null;\n        let url = null;\n        if ((typeof settingId === \"undefined\")) {\n            method = 'POST';\n            url = url_api_root + '/championships/' + championshipId + '/settings';\n        } else {\n            method = 'PUT';\n            url = url_api_root + '/championships/' + championshipId + '/settings/' + settingId;\n\n        }\n        $.ajax(\n            {\n                type: method,\n                url: url,\n                data: inputData,\n                success: function (data) {\n                    if (data != null && data.status == 'success') {\n                        noty({\n                            layout: 'bottomLeft',\n                            theme: 'kz',\n                            type: 'success',\n                            width: 200,\n                            dismissQueue: true,\n                            timeout: 3000,\n                            text: data.msg,\n                            template: '<div class=\"noty_message\"><div class=\"row\"><div class=\"col-xs-4 noty_icon\"><i class=\"icon-trophy2 \"></i> </div><div class=\"col-xs-8\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div></div>'\n                        });\n                        // Change warning icon to success\n                        //$('#one span').text('Hi I am replace');\n                        panel.find('.status-icon').removeClass().addClass('glyphicon glyphicon-ok  status-icon');\n                        panel.find('.text-orange-600').removeClass().addClass('text-success');\n                        panel.find('.cat-state').text(configured);\n\n                        form.attr('data-setting', data.settingId);\n                        let catsize = $(\".category-size\");\n                        if (method == 'POST') {\n                            categoriesSize = parseInt(catsize.text(), 10) + 1;\n                            catsize.html(categoriesSize)\n                        }\n                        if (categoriesSize == allCategoriesSize) {\n                            $('#categories-status').removeClass().addClass('badge badge-success');\n                            // Show Add Competitors Button\n                            $('#add_competitors').removeClass('hide');\n                        }\n\n\n                    } else {\n                        noty({\n                            layout: 'bottomLeft',\n                            theme: 'kz',\n                            type: 'error',\n                            width: 200,\n                            dismissQueue: true,\n                            timeout: 5000,\n                            text: data.msg,\n                            template: '<div class=\"noty_message\"><div class=\"row\"><div class=\"col-xs-4 noty_icon\"><i class=\"icon-warning\"></i> </div><div class=\"col-xs-8\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div></div>'\n                        });\n                    }\n                    $('.save_category').prop(\"disabled\", false);\n                    $('.save_category').find('i').removeClass('icon-spinner spinner position-left');\n\n\n                },\n                error: function (data) {\n                    noty({\n                        layout: 'bottomLeft',\n                        theme: 'kz',\n                        type: 'error',\n                        width: 200,\n                        dismissQueue: true,\n                        timeout: 5000,\n                        text: data.statusText,\n                        template: '<div class=\"noty_message\"><div class=\"row\"><div class=\"col-xs-4 noty_icon\"><i class=\"icon-warning\"></i> </div><div class=\"col-xs-8\"><span class=\"noty_text\"></span><div class=\"noty_close\"></div></div></div>'\n                    });\n                    $('.save_category').prop(\"disabled\", false);\n                    $('.save_category').find('i').removeClass('icon-spinner spinner position-left');\n                }\n\n            }\n        )\n\n    });\n\n    dualList = $('.listbox-filter-disabled').bootstrapDualListbox({\n        showFilterInputs: false,\n        infoTextEmpty: '',\n        infoText: '',\n        nonSelectedListLabel: 'Non-selected',\n        selectedListLabel: 'Selected',\n\n    });\n\n    $(\".switch\").bootstrapSwitch();\n\n\n    let $input = $('.dateFin').pickadate({\n        min: ['<?php echo e($year); ?>', '<?php echo e($month); ?>', '<?php echo e($day); ?>'],\n        format: 'yyyy-mm-dd',\n        today: '',\n        clear: '',\n        close: ''\n    });\n    let $input2 = $('.dateLimit').pickadate({\n        min: ['<?php echo e($year); ?>', '<?php echo e($month); ?>', '<?php echo e($day); ?>'],\n        format: 'yyyy-mm-dd',\n        today: '',\n        clear: '',\n        close: ''\n    });\n\n    let pickerFin = $input.pickadate('picker');\n    let pickerLimit = $input2.pickadate('picker');\n\n    $('.dateIni').pickadate({\n        min: ['<?php echo e($year); ?>', '<?php echo e($month); ?>', '<?php echo e($day); ?>'],\n        format: 'yyyy-mm-dd',\n        today: '',\n        clear: '',\n        close: '',\n\n        onSet: function () {\n            if (this.get('select') != null) {\n                pickerFin.set('min', this.get('select'));\n                pickerLimit.set('min', this.get('select'));\n            }\n\n            if (pickerFin.get() < this.get()) {\n                pickerFin.clear();\n            }\n            if (pickerLimit.get() < this.get()) {\n                pickerLimit.clear();\n            }\n\n        }\n\n    });\n\n    $('.datelimit').pickadate({\n        min: ['<?php echo e($year); ?>', '<?php echo e($month); ?>', '<?php echo e($day); ?>'],\n        format: 'yyyy-mm-dd',\n        today: '',\n        clear: '',\n        close: ''\n    });\n\n})\n;\n"]}